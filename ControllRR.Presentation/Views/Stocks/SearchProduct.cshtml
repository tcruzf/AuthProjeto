@using ControllRR.Domain.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@model ControllRR.Presentation.ViewModels.StockViewModel
@{
    ViewData["Title"]="Detalhes Produto";
    var statusNow = "Finished";
}

<!-- Modal para Movimentações -->
<div id="movementModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h4 class="modal-title">Adicionar Movimentação</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="movementForm" asp-controller="Stocks" asp-action="AddMovement" method="post">
                    <input type="hidden" id="StockId" name="StockId" />
                    
                    <div class="form-group">
                        <label>Tipo de Movimentação</label>
                        <select class="form-control" name="MovementType" required>
                            <option value="Entrada">Entrada</option>
                            <option value="Saida">Saída</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Quantidade</label>
                        <input type="number" class="form-control" name="Quantity" required min="1" />
                    </div>

                    <div class="form-group">
                        <label>Data</label>
                        <input type="date" class="form-control" name="MovementDate" value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                    </div>

                    <div class="form-group text-right">
                        <button type="submit" class="btn btn-primary">Salvar</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid px-4">
    <h1 class="mt-4"></h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/Stock/Index">Estoque</a></li>
          <li class="breadcrumb-item active">Buscar</li>
    </ol>
    <div class="mt-4">
         <a asp-action="CreateNewUser" class="btn btn-danger fa fa-edit"> Alterar Produto</a>
         <button type="button" class="btn btn-success fa fa-edit" data-toggle="modal" data-target="#movementModal">Inser Movimentação</button>   
         <button type="button" class="btn btn-success fa fa-edit" data-toggle="modal" data-target="#movementModal" onclick="prepareMovementModal()"> Inserir Movimentação </button>    
    </div>
</div>
<div class="row">
<div class="col-md-12">
<br>

<div class="container"> 
<div class="row">
<div class="col-12">
<div class="card">
<div class="card-header text-center bg-dark text-white">
<div class="row align-items-center">
<div class="col-md-12">
<h5>::Buscar Item em Estoque::</h5>
</div>
</div>
</div>
<div class="card mt-4">
<div class="card-header">INFORMAÇÕES::
</div>
<div class="card-body">
<div class="row">

     <div class="col">
    <label asp-for="StockDto.ProductName" class="control-label"></label>
    <input id="productSearch" class="form-control" placeholder="Procure por modelo, serial ou tipo" />
    <input type="hidden" id="productId" name="StockDto.ProductId" />
    </div>
     <div class="col">
    <label asp-for="StockDto.ProductDescription"></label>
    <input asp-for="StockDto.ProductDescription" id="StockDto_ProductDescription" class="form-control" />
    <span asp-validation-for="StockDto.ProductDescription" class="text-danger"></span>
</div>

<div class="col">
    <label asp-for="StockDto.ProductApplication"></label>
    <input asp-for="StockDto.ProductApplication" id="StockDto_ProductApplication" class="form-control" />
    <span asp-validation-for="StockDto.ProductApplication" class="text-danger"></span>
</div>

<div class="col">
    <label asp-for="StockDto.ProductReference"></label>
    <input asp-for="StockDto.ProductReference" id="StockDto_ProductReference" class="form-control" />
    <span asp-validation-for="StockDto.ProductReference" class="text-danger"></span>
</div>
<div class="col">
    <label asp-for="StockDto.ProductQuantity"></label>
    <input asp-for="StockDto.ProductQuantity" id="StockDto_ProductQuantity" class="form-control" />
    <span asp-validation-for="StockDto.ProductQuantity" class="text-danger"></span>
</div>

<!-- Adicione esta seção abaixo dos campos existentes -->
<div class="card mt-4">
    <div class="card-header">Movimentações deste Item</div>
    <div class="card-body">
        <table class="table table-striped" id="movementsTable">
            <thead>
                <tr>
                    <th>Data</th>
                    <th>Tipo</th>
                    <th>Quantidade</th>
                </tr>
            </thead>
            <tbody>
                <!-- As linhas serão preenchidas via JavaScript -->
            </tbody>
        </table>
    </div>
</div>

   
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
       <script src="//ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js"></script>

   
   <script type="text/javascript">
$(document).ready(function () {
$("#Seller_DepartmentId").change(function () {
var f = $("form");
f.submit(function () {
var productData = f.serialize();
$.post(f.attr("action"), Seller_Department, function (result, status) {
if (result !== null) {
$("#Seller_Department").text(result.Seller_Department);
}
else {
alert('Invalid ID');
}
});
});
});
});

</script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

    <script>
    $(document).ready(function () {
        $("#productSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Stocks/Search',
                    type: 'GET',
                    data: { term: request.term },
                    success: function (data) {
    response($.map(data, function (item) {
        return {
            label: item.productName + " - " + item.productDescription,
            value: item.productName,
            id: item.id,
            desc: item.productDescription,
            app: item.productApplication,
            ref: item.productReference,
            qtt: item.productQuantity,
            movements: item.movements 
        };
    }));
}
                });
            },
            select: function (event, ui) {
    // Preenche os campos do Stock
    $("#productSearch").val(ui.item.label);
    $("#productId").val(ui.item.id);
    $("#StockDto_ProductDescription").val(ui.item.desc);
    $("#StockDto_ProductApplication").val(ui.item.app);
    $("#StockDto_ProductReference").val(ui.item.ref);
    $("#StockDto_ProductQuantity").val(ui.item.qtt);

    // Limpa a tabela de movimentações
    $("#movementsTable tbody").empty();

    // Preenche as movimentações (se houver)
    if (ui.item.movements && ui.item.movements.length > 0) {
        $.each(ui.item.movements, function(index, movement) {
            $("#movementsTable tbody").append(
                `<tr>
                    <td>${movement.formattedMovementDate}</td>
                    <td>${movement.movementType}</td>
                    <td>${movement.quantity}</td>
                </tr>`
            );
        });
    } else {
        $("#movementsTable tbody").append(
            `<tr>
                <td colspan="3">Nenhuma movimentação registrada.</td>
            </tr>`
        );
    }
    
    return false;
}
        });
    });
</script>
<script>
    function prepareMovementModal() {
        // Pega o ID do produto selecionado
        var stockId = $("#productId").val();
        
        if (!stockId) {
            alert("Selecione um produto primeiro!");
            $("#movementModal").modal("hide");
            return;
        }

        // Preenche o campo oculto com o ID do produto
        $("#StockId").val(stockId);
    }

    // Submit do formulário via AJAX
    $("#movementForm").submit(function(e) {
        e.preventDefault();

        $.ajax({
            url: $(this).attr("action"),
            type: "POST",
            data: $(this).serialize(),
            success: function(response) {
                if (response.success) {
                    $("#movementModal").modal("hide");
                    // Atualiza a tabela de movimentações
                    loadMovements($("#productId").val());
                } else {
                    alert("Erro: " + response.message);
                }
            }
        });
    });

    function loadMovements(stockId) {
        $.get("/Stocks/GetMovements/" + stockId, function(data) {
            $("#movementsTable tbody").empty();
            
            if (data.length > 0) {
                $.each(data, function(index, movement) {
                    $("#movementsTable tbody").append(
                        `<tr>
                            <td>${new Date(movement.movementDate).toLocaleDateString()}</td>
                            <td>${movement.movementType}</td>
                            <td>${movement.quantity}</td>
                        </tr>`
                    );
                });
            } else {
                $("#movementsTable tbody").append(
                    `<tr>
                        <td colspan="3">Nenhuma movimentação registrada.</td>
                    </tr>`
                );
            }
        });
    }
</script>
}